# Copyright (c) 2017 Hartmut Kaiser
#
# Distributed under the Boost Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

# partially taken from https://bloerg.net/2012/11/10/cmake-and-distutils.html

# build the extension module
add_subdirectory(src)

# integrate the extension module with the Python installation
if (PYTHON_EXECUTABLE)
  set(SETUP_PY_IN "${PROJECT_SOURCE_DIR}/cmake/templates/setup.py.in")
  set(INIT_PY_IN "${PROJECT_SOURCE_DIR}/cmake/templates/__init__.py.in")

  set(INIT_PY ${CMAKE_CURRENT_SOURCE_DIR}/phylanx/core/__init__.py)
  set(SETUP_PY ${CMAKE_CURRENT_BINARY_DIR}/setup)

  set(DEPS ${INIT_PY})
  set(OUTPUT "${CMAKE_CURRENT_BINARY_DIR}/build/timestamp")
  file(MAKE_DIRECTORY "${CMAKE_BINARY_DIR}/share")

  set(PYTHON_PACKAGE_BASE_DIR "${CMAKE_CURRENT_SOURCE_DIR}")
  set(PYTHON_BINARY_BASE_DIR "${CMAKE_BINARY_DIR}")
  set(PHYLANX_INSTALL_PATH "${CMAKE_BINARY_DIR}")
  set(HPX_INSTALL_PATH "${HPX_PREFIX}")

  if(WIN32)
    # the generated package base-dir needs to use '\\' instead of '/'
    string(REPLACE "/" "\\\\" PYTHON_PACKAGE_BASE_DIR ${PYTHON_PACKAGE_BASE_DIR})
    string(REPLACE "/" "\\\\" PYTHON_BINARY_BASE_DIR ${PYTHON_BINARY_BASE_DIR})
    string(REPLACE "/" "\\\\" PHYLANX_INSTALL_PATH ${PHYLANX_INSTALL_PATH})
    string(REPLACE "/" "\\\\" HPX_INSTALL_PATH ${HPX_INSTALL_PATH})
  endif()

  set(ADDITIONAL_COMMENT
    "Do not edit this file! It has been generated by the cmake configuration step.")

  if(CMAKE_BUILD_TYPE)
    set(__configs ${CMAKE_BUILD_TYPE})
  elseif(CMAKE_CONFIGURATION_TYPES)
    set(__configs ${CMAKE_CONFIGURATION_TYPES})
  else()
    set(__configs ${HPX_BUILD_TYPE})
  endif()

  # generate 'setup_$<CONFIG>.py'
  set(__install_config ${__configs})
  foreach (__config ${__configs})
    set(CONFIG ${__config})
    if(${__config} STREQUAL "Debug")
      set(PYTHON_PACKAGE_NAME "_phylanxd")
    else()
      set(PYTHON_PACKAGE_NAME "_phylanx")
    endif()
    configure_file(${SETUP_PY_IN} "${SETUP_PY}_${__config}.py" @ONLY)
    set(__install_config ${__config})
  endforeach()

  # generate 'phylanx/__init__.py'
  configure_file(${INIT_PY_IN} "${INIT_PY}" @ONLY)

  # use one of the setup_....py for installing the built extension module
  set(__setup_script "${SETUP_PY}_${__install_config}.py")
  set(setup_files ${SETUP_PY_IN} ${INIT_PY_IN})

  add_custom_command(OUTPUT ${OUTPUT}
    COMMAND ${PYTHON_EXECUTABLE} ${__setup_script} build
    COMMAND ${CMAKE_COMMAND} -E touch ${OUTPUT}
    DEPENDS ${DEPS} phylanx_py)

  add_custom_target(python_setup ALL
    DEPENDS ${OUTPUT} ${__setup_script} ${DEPS}
    SOURCES ${setup_files})

  set_target_properties(python_setup
    PROPERTIES FOLDER "Core")

  source_group("Setup" FILES ${setup_files})
  set_source_files_properties(${setup_files} PROPERTIES HEADER_FILE_ONLY TRUE)

  # for the install step it does not matter which setup.py we use
  install(CODE
    "execute_process(COMMAND ${PYTHON_EXECUTABLE} ${SETUP_PY}_${__install_config}.py install --user)")

endif()

phylanx_get_python_extension_location(${PYTHON_MODULE_EXTENSION} _result)
set(PHYLANX_PYTHON_EXTENSION_LOCATION ${_result} CACHE STRING
    "Location of the staged python extension")
mark_as_advanced(PHYLANX_PYTHON_EXTENSION_LOCATION)

set(phylanx_targets ${phylanx_targets} PARENT_SCOPE)
