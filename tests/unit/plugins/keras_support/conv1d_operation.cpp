// Copyright (c) 2019 Bita Hasheminezhad
// Copyright (c) 2019 Hartmut Kaiser
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

#include <phylanx/phylanx.hpp>

#include <hpx/hpx_main.hpp>
#include <hpx/include/lcos.hpp>
#include <hpx/util/lightweight_test.hpp>

#include <string>
#include <utility>

phylanx::execution_tree::primitive_argument_type compile_and_run(
    std::string const& codestr)
{
    phylanx::execution_tree::compiler::function_list snippets;
    phylanx::execution_tree::compiler::environment env =
        phylanx::execution_tree::compiler::default_environment();

    auto const& code = phylanx::execution_tree::compile(codestr, snippets, env);
    return code.run();
}

///////////////////////////////////////////////////////////////////////////////
void test_conv1d_operation(std::string const& code,
    std::string const& expected_str)
{
    HPX_TEST_EQ(compile_and_run(code), compile_and_run(expected_str));
}

///////////////////////////////////////////////////////////////////////////////
int main(int argc, char* argv[])
{
    test_conv1d_operation("conv1d([[[1,2],[3,4],[5,6]],[[7,8],[9,10],[11,12]]],"
        "[[[2,3,-3,-2],[0,1,-1,0]],[[4,5,-4,-5],[13,1,5,33]]])",
        "[[[  66.,   24.,    3.,  115.], [ 104.,   44.,   -3.,  167.]],"
        "[[ 180.,   84.,  -15.,  271.], [ 218.,  104.,  -21.,  323.]]]");
    test_conv1d_operation(R"(conv1d([[[10,-2,5],[-3,3,4],[6,5,6],[7,-9,12]],
        [[14,7,8],[-9,9,10],[-4,5,13],[11,0,12]]],
        [[[2,3,-3],[0,-1,0],[20,33,1]],[[-1,5,13],[-1,-33,65],[-3,-17,5]]],
        "valid",1,1))",
        "[[[ 108.,   15.,  151.], [  45., -117.,  446.], [  98.,  339., -446.]],"
       "[[ 158., -213.,  484.],[ 142., -112.,  375.],[ 205.,  263.,  228.]]]");
    test_conv1d_operation(
        R"(conv1d([[[1,2],[3,4],[5,6]],[[7,8],[9,10],[11,12]]], [[[2,3,-3,-2],
         [0,1,-1,0]],[[1,3,2,1],[1,1,1,1]],[[-1,0,0,1],[42,1,5,13]]], "same"))",
        "[[[ 168.,    9.,   24.,   58.], [ 256.,   24.,   35.,   88.],"
        "[  17.,   34.,    3.,    5.]], [[ 426.,   39.,   72.,  154.],"
        "[ 526.,   78.,   59.,  172.],  [  41.,   82.,   -3.,    5.]]]");
    test_conv1d_operation(
        R"(conv1d([[[1,2],[3,4],[5,6]],[[7,8],[9,10],[11,12]]],
        [[[2,3,-3,-2],[0,1,-1,0]]], "same"))",
        "[[[  2.,   5.,  -5.,  -2.],  [  6.,  13., -13.,  -6.],"
        "[ 10.,  21., -21., -10.]], [[ 14.,  29., -29., -14.],"
        "[ 18.,  37., -37., -18.], [ 22.,  45., -45., -22.]]]");
    test_conv1d_operation(
        R"(conv1d([[[1,2],[3,4],[5,6]],[[7,8],[9,10],[11,12]]],
        [[[2,3,-3,-2],[0,1,-1,0]],[[1,3,2,1],[1,1,1,1]],[[-1,0,0,1],
        [42,1,5,13]]], "causal"))",
        "[[[  83.,    2.,   10.,   27.], [ 168.,    9.,   24.,   58.],"
        "[ 256.,   24.,   35.,   88.]], [[ 329.,    8.,   40.,  111.],"
        "[ 426.,   39.,   72.,  154.], [ 526.,   78.,   59.,  172.]]]");
    test_conv1d_operation(
        R"(conv1d([[[1,2],[3,4],[5,6],[7,8]],[[5,6],[7,8],[9,10],[11,12]]],
         [[[2,3,-3,-2],[0,1,-1,0]],[[4,5,-4,-5],[13,1,5,33]]], "valid", 2))",
        "[[[  66.,   24.,    3.,  115.], [ 142.,   64.,   -9.,  219.]],"
        "[[ 142.,   64.,   -9.,  219.], [ 218.,  104.,  -21.,  323.]]]");
    test_conv1d_operation(
        R"(conv1d([[[1,2],[3,4],[5,6]],[[7,8],[9,10],[11,12]]], [[[2,3,-3,-2],
         [0,1,-1,0]],[[1,3,2,1],[1,1,1,1]],[[-1,0,33,1],[42,1,5,13]]], "same",
         2))",
        "[[[ 168.,    9.,  123.,   58.],  [  17.,   34.,    3.,    5.]],"
        "[[ 426.,   39.,  369.,  154.],  [  41.,   82.,   -3.,    5.]]]");
    test_conv1d_operation(
        R"(conv1d([[[1,2],[3,4],[5,6]],[[7,8],[9,10],[11,12]]], [[[2,3,-3,-2],
        [0,1,-1,0]],[[1,3,2,1],[1,1,1,1]],[[-1,0,33,1],[42,1,5,13]],
        [[-1,0,33,1],[42,1,5,13]],[[-1,0,33,1],[42,1,5,13]]], "same", 2))",
        "[[[  495.,    12.,   357.,   165.],[  256.,    24.,   200.,    88.]],"
        "[[ 1233.,    30.,  1041.,   417.],[  526.,    78.,   422.,   172.]]]");
    test_conv1d_operation(
        R"(conv1d([[[10,-2,5],[-3,3,4],[6,5,6],[7,-9,12]],[[14,7,8],[-9,9,10],
        [-4,5,13],[11,0,12]]], [[[2,3,-3],[0,-1,0],[20,33,1]],[[-1,5,13],
        [-1,-33,65],[-3,-17,5]]], "same", 4))",
        "[[[ 108.,   15.,  151.]], [[ 158., -213.,  484.]]]");
    test_conv1d_operation(
        R"(conv1d([[[1,2],[3,4],[5,6]],[[7,8],[9,10],[11,12]]], [[[2,3,-3,-2],
        [0,1,-1,0]],[[1,3,2,1],[1,1,1,1]],[[-1,0,0,1],[42,1,5,13]]]
        , "causal", 2))",
        "[[[  83.,    2.,   10.,   27.], [ 256.,   24.,   35.,   88.]],"
        "[[ 329.,    8.,   40.,  111.], [ 526.,   78.,   59.,  172.]]]");
    test_conv1d_operation(
        R"(conv1d([[[10,-2,5],[-3,3,4],[6,5,6],[7,-9,12]],[[14,7,8],[-9,9,10],
        [-4,5,13],[11,0,12]]], [[[2,3,-3],[0,-1,0],[20,33,1]],[[-1,5,13],
        [-1,-33,65],[-3,-17,5]]], "causal", 4))",
        "[[[ -23.,   31.,   25.]], [[ -45., -297.,  677.]]]");
    test_conv1d_operation(
        R"(conv1d([[[1,2],[3,4],[5,6]],[[7,8],[9,10],[11,12]]], [[[2,3,-3,-2],
         [0,1,-1,0]],[[1,1,2,1],[1,1,1,1]]], "valid",  1, 2))",
        "[[[ 13.,  16.,  11.,   9.]], [[ 37.,  52.,   5.,   9.]]]");
    test_conv1d_operation(
        R"(conv1d([[[10,-2,5],[-3,3,4],[6,5,6],[7,-9,12]],[[14,7,8],[-9,9,10],
        [-4,5,13],[11,0,12]]], [[[2,3,-3],[0,-1,0],[20,33,1]],[[-1,5,13],
        [-1,-33,65],[-3,-17,5]]], "valid",  1, 3))",
        "[[[  86.,  325., -459.]], [[ 141.,  150.,  169.]]]");
    test_conv1d_operation(
        R"(conv1d([[[1,2],[3,4],[5,6]],[[7,8],[9,10],[11,12]]], [[[2,3,-3,-2],
         [0,1,-1,0]],[[1,3,2,1],[1,1,1,1]],[[-1,0,33,1],[42,1,5,13]],
         [[-1,0,33,1],[42,1,5,13]],[[-1,0,33,1],[42,1,5,13]]], "same",  1, 2))",
        "[[[ 330.,    8.,  238.,  110.],    [ 165.,    4.,  119.,   55.],"
        "[ 250.,   11.,  199.,   86.]],    [[ 822.,   20.,  694.,  278.],"
        "[ 411.,   10.,  347.,  139.],   [ 508.,   41.,  445.,  182.]]]");
    test_conv1d_operation(
        R"(conv1d([[[1,2],[3,4],[5,6]],[[7,8],[9,10],[11,12]]], [[[2,3,-3,-2],
         [0,1,-1,0]],[[1,3,2,1],[1,1,1,1]],[[-1,0,33,1],[42,1,5,13]],
         [[-1,0,33,1],[42,1,5,13]],[[-1,0,33,1],[42,1,5,13]]], "same",  1, 3))",
        "[[[  83.,    2.,   43.,   27.],  [ 165.,    4.,  119.,   55.],"
        "[ 247.,    6.,  195.,   83.]],  [[ 329.,    8.,  271.,  111.],"
        "[ 411.,   10.,  347.,  139.],  [ 493.,   12.,  423.,  167.]]]");
    test_conv1d_operation(
        R"(conv1d([[[1,2],[3,4],[5,6],[1,-1]],[[7,8],[9,10],[11,12],[13,14]]],
         [[[2,3,-3,-2],[0,1,-1,0]],[[1,3,2,1],[1,1,1,1]]], "same",  1, 3))",
        "[[[ 11.,  21.,  16.,  11.], [  2.,   7.,  -4.,  -2.],"
        "[  6.,  13., -13.,  -6.], [ 10.,  21., -21., -10.]],"
        "[[ 23.,  45.,  34.,  23.], [ 41.,  82.,  11.,  13.],"
        "[ 18.,  37., -37., -18.], [ 22.,  45., -45., -22.]]]");
    test_conv1d_operation(
        R"(conv1d([[[1,2],[3,4],[5,6],[1,-1]],[[7,8],[9,10],[11,12],[13,14]]],
         [[[2,3,-3,-2],[0,1,-1,0]],[[1,3,2,1],[1,1,1,1]]], "same",  1, 6))",
        "[[[  0.,   2.,   1.,   0.], [  0.,   0.,   0.,   0.],"
        "[  0.,   0.,   0.,   0.],  [  2.,   5.,  -5.,  -2.]],"
        "[[ 27.,  53.,  40.,  27.], [  0.,   0.,   0.,   0.],"
        "[  0.,   0.,   0.,   0.],  [ 14.,  29., -29., -14.]]]");
    test_conv1d_operation(
        R"(conv1d([[[1,2],[3,4],[5,6]],[[7,8],[9,10],[11,12]]], [[[2,3,-3,-2],
         [0,1,-1,0]],[[1,3,2,1],[1,1,1,1]],[[-1,0,0,1],[42,1,5,13]]],
        "causal",  1, 3))",
        "[[[  83.,    2.,   10.,   27.], [ 165.,    4.,   20.,   55.],"
        "[ 247.,    6.,   30.,   83.]], [[ 329.,    8.,   40.,  111.],"
        "[ 411.,   10.,   50.,  139.], [ 493.,   12.,   60.,  167.]]]");
    test_conv1d_operation(
        R"(conv1d([[[1,2],[3,4],[5,6]],[[7,8],[9,10],[11,12]]], [[[2,3,-3,-2],
         [0,1,-1,0]],[[1,3,2,1],[1,1,1,1]],[[-1,0,0,1],[42,1,5,13]]],
        "causal",  1, 7))",
        "[[[  83.,    2.,   10.,   27.], [ 165.,    4.,   20.,   55.],"
        "[ 247.,    6.,   30.,   83.]], [[ 329.,    8.,   40.,  111.],"
        "[ 411.,   10.,   50.,  139.], [ 493.,   12.,   60.,  167.]]]");


    return hpx::util::report_errors();
}
