// Copyright (c) 2019 Bita Hasheminezhad
// Copyright (c) 2019 Hartmut Kaiser
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

#include <phylanx/phylanx.hpp>

#include <hpx/hpx_main.hpp>
#include <hpx/testing.hpp>

#include <string>
#include <utility>

///////////////////////////////////////////////////////////////////////////////
phylanx::execution_tree::primitive_argument_type compile_and_run(
    std::string const& codestr)
{
    phylanx::execution_tree::compiler::function_list snippets;
    phylanx::execution_tree::compiler::environment env =
        phylanx::execution_tree::compiler::default_environment();

    auto const& code = phylanx::execution_tree::compile(codestr, snippets, env);
    return code.run();
}

///////////////////////////////////////////////////////////////////////////////
void test_avg_pool2d_operation(std::string const& code,
    std::string const& expected_str)
{
    HPX_TEST_EQ(compile_and_run(code), compile_and_run(expected_str));
}

///////////////////////////////////////////////////////////////////////////////
int main(int argc, char* argv[])
{
    test_avg_pool2d_operation(
        "avg_pool2d("
        "[[[[ 0.,  1.,  2.,  3.],[ 4.,  5.,  6.,  7.],[ 8.,  9., 10., 11.]],"
        "[[12., 13., 14., 15.],[16., 17., 18., 19.],[20., 21., 22., 23.]],"
        "[[24., 25., 26., 27.],[28., 29., 30., 31.],[32., 33., 13., 35.]]],"
        "[[[36., 37., 38., 39.],[40., 41., 42., 43.],[ 2., 45., 46.,  4.]],"
        "[[48., 49., 50., 51.],[52., 13., 54., 55.],[56., 57., 58., 59.]],"
        "[[60., 61., 62., 63.],[64.,  5.,  6., 67.],[ 8., 69., 70., 71.]]]], "
        "make_list(2,2))",
        "[[[[ 8.  ,  9.  , 10.  , 11.  ],[12.  , 13.  , 14.  , 15.  ]],"
        "[[20.  , 21.  , 22.  , 23.  ],[24.  , 25.  , 20.75, 27.  ]]],"
        "[[[44.  , 35.  , 46.  , 47.  ],[37.5 , 39.  , 50.  , 40.25]],"
        "[[56.  , 32.  , 43.  , 59.  ],[45.  , 36.  , 47.  , 63.  ]]]]");
    test_avg_pool2d_operation(
        R"(avg_pool2d(
        [[[[ 0,  13,  2,  3], [ 4,  5,  6,  7], [ 8,  9, 10, 11]],
        [[12, 13, 42, 15], [16, 17, 18, 19], [20, 21, 22, 23]]],
        [[[ 0,  1,  2.,  3], [ 4,  5,  6,  7], [ 8,  9, 10, 11]],
        [[12, 33, 14, 5], [16, 17, 18, 25], [20, 21, 42, 23]]]],
        make_list(1,2), "valid"))",
        "[[[[ 2.,  9.,  4.,  5.], [ 6.,  7.,  8.,  9.]],"
        "[[14., 15., 30., 17.], [18., 19., 20., 21.]]],"
        "[[[ 2.,  3.,  4.,  5.], [ 6.,  7.,  8.,  9.]],"
        "[[14., 25., 16., 15.], [18., 19., 30., 24.]]]]");
    test_avg_pool2d_operation(
        R"(avg_pool2d(
        [[[[ 0.,  1.,  2.,  3.], [ 4.,  5.,  6.,  7.], [ 8.,  9., 10., 11.]],
        [[12., 13., 42., 15.], [16., 17., 18., 19.], [20., 21., 22., 23.]]],
        [[[ 0.,  1., 20.,  3.], [ 4.,  5.,  6.,  7.], [ 8.,  9., 10., 11.]],
        [[12., 33., 14.,  5.], [16., 17., 18., 25.], [20., 21., 42., 23.]]]],
        make_list(2,2), "same"))",
        "[[[[ 8. ,  9. , 17. , 11. ],  [12. , 13. , 14. , 15. ],"
        "[14. , 15. , 16. , 17. ]], [[14. , 15. , 30. , 17. ],"
        "[18. , 19. , 20. , 21. ],  [20. , 21. , 22. , 23. ]]],"
        "[[[ 8. , 14. , 14.5, 10. ],  [12. , 13. , 19. , 16.5],"
        "[14. , 15. , 26. , 17. ]], [[14. , 25. , 16. , 15. ],"
        "[18. , 19. , 30. , 24. ],  [20. , 21. , 42. , 23. ]]]]");
    test_avg_pool2d_operation(
        R"(avg_pool2d(
        [[[[ 0.,  1.,  2.,  3.],[ 4.,  5.,  6.,  7.],[ 8.,  9., 10., 11.]],
        [[12., 13., 14., 15.],[16., 17., 18., 19.],[20., 21., 22., 23.]],
        [[24., 25., 26., 27.],[28., 29., 30., 31.],[32., 33., 13., 35.]]],
        [[[36., 37., 38., 39.],[40., 41., 42., 43.],[ 2., 45., 46.,  4.]],
        [[48., 49., 50., 51.],[52., 13., 54., 55.],[56., 57., 58., 59.]],
        [[60., 61., 62., 63.],[64.,  5.,  6., 67.],[ 8., 69., 70., 71.]]]],
        make_list(1,2),"valid",list(2,3)))",
        "[[[[ 2.,  3.,  4.,  5.]], [[26., 27., 28., 29.]]],"
        "[[[38., 39., 40., 41.]], [[62., 33., 34., 65.]]]]");
    test_avg_pool2d_operation(
        R"(avg_pool2d(
        [[[[ 0,  13,  2,  3],[ 4,  65,  6,  7],[ 8,  9, 10, 11]],
        [[12, 13, 42, 15],[0,  17, 0, 19],[20, 1, 2, 23]]],
        [[[ 0,  1,  2.,  3],[ 4,  5,  6,  7],[ 8,  9, 13, 11]],
        [[12, 33, 14, 5],[16, 17, -18, 25],[2, 21, 42, 23]]]],
        make_list(2,2), "same", make_list(1,2)))",
        "[[[[ 4. , 27. , 12.5, 11. ], [14. ,  5. ,  6. , 17. ]],"
        "[[ 6. , 15. , 21. , 17. ], [20. ,  1. ,  2. , 23. ]]],"
        "[[[ 8. , 14. ,  1. , 10. ], [ 5. , 15. , 27.5, 17. ]],"
        "[[14. , 25. , -2. , 15. ], [ 2. , 21. , 42. , 23. ]]]]");
    test_avg_pool2d_operation(
        R"(avg_pool2d(
        [[[[ 0.,  1.,  2.,  3.], [ 4.,  5.,  6.,  7.],  [ 8.,  9., 10., 11.]],
        [[12., 13., 14., 15.], [16., 17., 18., 19.],  [20., 21., 22., 23.]],
        [[24., 25., 26., 27.], [28., 29., 30., 31.],  [32., 33., 13., 35.]]],
        [[[36., 37., 38., 39.], [40., 41., 42., 43.],  [2., 45., 46., 4.]],
        [[48., 49., 50., 51.], [52., 13., 54., 55.],  [56., 57., 58., 59.]],
        [[60., 61., 62., 63.], [64., 5., 6., 67.],  [8., 69., 70., 70.]]]],
        make_list(1,2), "same", make_list(2,3)))",
        "[[[[ 2.,  3.,  4.,  5.]], [[26., 27., 28., 29.]]],"
        "[[[38., 39., 40., 41.]], [[62., 33., 34., 65.]]]]");

    return hpx::util::report_errors();
}
