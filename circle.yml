#  Copyright (c) 2017  R. Tohid
#
#  Distributed under the Boost Software License, Version 1.0. (See accompanying
#  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

machine:
    services:
        - docker
    environment:
        IMAGE_NAME: stellargroup/phylanx:debian_clang
        TARGET_IMAGE_NAME: stellargroup/phylanx:dev

general:
    branches:
        ignore:
            - gh-pages

dependencies:
    pre:
        - docker build -t $IMAGE_NAME tools/docker:
            timeout: 1200
        - mkdir -p build

    override:
        - docker run -v $PWD:/phylanx -w /phylanx/build -e "CIRCLECI=true" ${IMAGE_NAME} cmake -DPHYLANX_CMAKE_LOGLEVEL=Debug -DHPX_DIR=/usr/local/lib/cmake/HPX -DEigen3_DIR=/eigen/3.3.4/share/eigen3/cmake/ -DEigen3_INCLUDE_DIRS=/eigen/3.3.4/include/eigen3 -Dpybind11_DIR=/pybind11/share/cmake/pybind11/ -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang ..
        - docker run -v $PWD:/phylanx -w /phylanx/build ${IMAGE_NAME} make -j 2
        # TODO replace this line with "docker build" once docker managed to
        # introduce temporal file copies that don't show in the resulting image
        # size.
        # The problem is the "ADD/COPY" and "RUN rm" in Dockerfile. Those count
        # as separate steps and keep the temporal files stored as part of the
        # image, expanding it by about 500 MB.
        # docker-compile.pl is a dirty workaround, and shall be removed ASAP.
        - cp tools/docker/Dockerfile.post Dockerfile
        - cp tools/docker/.dockerignore .
        - ./tools/docker/docker-compile.pl ${TARGET_IMAGE_NAME}:
            timeout: 1200   # increase timeout to avoid failure

test:
    override:
        - docker run -v $PWD:/phylanx -w /phylanx/build ${IMAGE_NAME} make -j 2 tests

deployment:
    hub:
        branch: master
        commands:
            - docker login -e ${DOCKER_EMAIL} -u ${DOCKER_USER} -p ${DOCKER_PASS}
            - docker push ${TARGET_IMAGE_NAME}

