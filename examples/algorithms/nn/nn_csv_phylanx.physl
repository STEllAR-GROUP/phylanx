# Copyright(c) 2018 Weile Wei
#
# Distributed under the Boost Software License, Version 1.0.(See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

# Single Layer Neural Network Algorithm
define(SingleLayerNeuralNetwork, X, y, hidden_layer_neurons, num_iter, lr,
    block(
        define(inputlayer_neurons, slice( shape(X), 1)),
        define(output_neurons, slice(shape(y), 0)),
        define(wh, random(list(inputlayer_neurons, hidden_layer_neurons), "uniform")),
        define(bh, random(list(1, hidden_layer_neurons), "uniform")),
        define(wout, random(list(hidden_layer_neurons, output_neurons), "uniform")),
        define(bout, random(list(1, output_neurons), "uniform")),
        for_each(lambda(i, block(
                    define(hidden_layer_input1, dot(X, wh)),
                    define(hidden_layer_input, __add(hidden_layer_input1, bh)),
                    define(hidden_layer_activations, __div(1, __add(1, exp( __minus(hidden_layer_input))))),
                    define(output_layer_input1, dot(hidden_layer_activations, wout)),
                    define(output_layer_input, __add(output_layer_input1, bout)),
                    define(output, __div(1, __add(1, exp(__minus(output_layer_input))))),
                    define(Error, __sub(y, output)),
                    define(slope_output_layer, __mul(output, __sub(1, output))),
                    define(slope_hidden_layer, __mul(hidden_layer_activations, __sub(1, hidden_layer_activations))),
                    define(d_output, __mul(Error, slope_output_layer)),
                    define(Error_at_hidden_layer, dot(d_output, transpose(wout))),
                    define(d_hidden_layer, __mul(Error_at_hidden_layer, slope_hidden_layer)),
                    store(wout, __add(wout, __mul(dot(transpose(hidden_layer_activations), d_output), lr))),
                    store(bout, __add(bout, __mul(sum(d_output, 0, true), lr))),
                    store(wh, __add(wh, __mul(dot(transpose(X), d_hidden_layer), lr))),
                    store(bh, __add(bh, __mul(sum(d_hidden_layer, 0, true), lr))))),
            range(num_iter)
        ), wh
    )
)
